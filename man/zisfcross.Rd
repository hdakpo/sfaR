% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/zisfcross.R
\name{zisfcross}
\alias{zisfcross}
\alias{print.zisfcross}
\alias{nobs.zisfcross}
\alias{bread.zisfcross}
\alias{estfun.zisfcross}
\title{Zero inefficiency stochastic frontier estimation using cross-section data}
\usage{
zisfcross(
  formula,
  muhet,
  uhet,
  vhet,
  thet,
  logDepVar = TRUE,
  data,
  subset,
  weights,
  wscale = TRUE,
  S = 1L,
  udist = "hnormal",
  start = NULL,
  method = "bfgs",
  hessianType = 1,
  simType = "halton",
  Nsim = 300,
  prime = 2L,
  burn = 10,
  antithetics = FALSE,
  seed = 12345,
  itermax = 2000L,
  printInfo = FALSE,
  tol = 1e-12,
  gradtol = 1e-06,
  stepmax = 0.1,
  qac = "marquardt"
)

\method{print}{zisfcross}(x, ...)

\method{bread}{zisfcross}(x, ...)

\method{estfun}{zisfcross}(x, ...)

\method{nobs}{zisfcross}(x, ...)
}
\arguments{
\item{formula}{A symbolic description of the model to be estimated based on
the generic function \code{formula} (see section \sQuote{Details}).}

\item{muhet}{A one-part formula to consider heterogeneity in the mean of the
pre-truncated distribution (see section \sQuote{Details}).}

\item{uhet}{A one-part formula to consider heteroscedasticity in the
one-sided error variance (see section \sQuote{Details}).}

\item{vhet}{A one-part formula to consider heteroscedasticity in the
two-sided error variance (see section \sQuote{Details}).}

\item{thet}{A one-part formula to account for inefficient and efficient groups
of observations (two classes).}

\item{logDepVar}{Logical. Informs whether the dependent variable is logged
(\code{TRUE}) or not (\code{FALSE}). Default = \code{TRUE}.}

\item{data}{The data frame containing the data.}

\item{subset}{An optional vector specifying a subset of observations to be
used in the optimization process.}

\item{weights}{An optional vector of weights to be used for weighted log-likelihood.
Should be \code{NULL} or numeric vector with positive values. When \code{NULL},
a numeric vector of 1 is used.}

\item{wscale}{Logical. When \code{weights} is not \code{NULL}, a scaling transformation
is used such that the the \code{weights} sums to the sample size. Default \code{TRUE}.
When \code{FALSE} no scaling is used.}

\item{S}{If \code{S = 1} (default), a production (profit) frontier is
estimated: \eqn{\epsilon_i = v_i-u_i}. If \code{S = -1}, a cost frontier is
estimated: \eqn{\epsilon_i = v_i+u_i}.}

\item{udist}{Character string. Default = \code{'hnormal'}. Distribution
specification for the one-sided error term. 10 different distributions are
available: \itemize{ \item \code{'hnormal'}, for the half normal
distribution (Aigner \emph{et al.} 1977, Meeusen and Vandenbroeck 1977)
\item \code{'exponential'}, for the exponential distribution \item
\code{'tnormal'} for the truncated normal distribution (Stevenson 1980)
\item \code{'rayleigh'}, for the Rayleigh distribution (Hajargasht 2015)
\item \code{'uniform'}, for the uniform distribution (Li 1996, Nguyen 2010)
\item \code{'gamma'}, for the Gamma distribution (Greene 2003) \item
\code{'lognormal'}, for the log normal distribution (Migon and Medici 2001,
Wang and Ye 2020) \item \code{'weibull'}, for the Weibull distribution
(Tsionas 2007) \item \code{'genexponential'}, for the generalized
exponential distribution (Papadopoulos 2020) \item \code{'tslaplace'}, for
the truncated skewed Laplace distribution (Wang 2012). }}

\item{start}{Numeric vector. Optional starting values for the maximum
likelihood (ML) estimation.}

\item{method}{Optimization algorithm used for the estimation.  Default =
\code{'bfgs'}. 11 algorithms are available: \itemize{ \item \code{'bfgs'},
for Broyden-Fletcher-Goldfarb-Shanno (see
\code{\link[maxLik:maxBFGS]{maxBFGS}}) \item \code{'bhhh'}, for
Berndt-Hall-Hall-Hausman (see \code{\link[maxLik:maxBHHH]{maxBHHH}}) \item
\code{'nr'}, for Newton-Raphson (see \code{\link[maxLik:maxNR]{maxNR}})
\item \code{'nm'}, for Nelder-Mead (see \code{\link[maxLik:maxNM]{maxNM}})
\item \code{'cg'}, for Conjugate Gradient (see \code{\link[maxLik:maxCG]{maxCG}})
\item \code{'sann'}, for Simulated Annealing (see \code{\link[maxLik:maxSANN]{maxSANN}})
\item \code{'ucminf'}, implements a quasi-Newton type with BFGS updating of the
inverse Hessian and soft line search with a trust region type monitoring of
the input to the line search algorithm (see \code{\link[ucminf:ucminf]{ucminf}})
\item \code{'mla'}, for general-purpose optimization based on
Marquardt-Levenberg algorithm (see \code{\link[marqLevAlg:mla]{mla}})
\item \code{'sr1'}, for Symmetric Rank 1 (see
\code{\link[trustOptim:trust.optim]{trust.optim}}) \item \code{'sparse'}, for trust
regions and sparse Hessian (see \code{\link[trustOptim:trust.optim]{trust.optim}}) \item
\code{'nlminb'}, for optimization using PORT routines (see
\code{\link[stats:nlminb]{nlminb}})}}

\item{hessianType}{Integer. If \code{1} (Default), analytic Hessian is
returned for all the distributions. If \code{2},
bhhh Hessian is estimated (\eqn{g'g}).}

\item{simType}{Character string. If \code{simType = 'halton'} (Default),
Halton draws are used for maximum simulated likelihood (MSL). If
\code{simType = 'ghalton'}, Generalized-Halton draws are used for MSL. If
\code{simType = 'sobol'}, Sobol draws are used for MSL. If \code{simType =
'uniform'}, uniform draws are used for MSL. (see section \sQuote{Details}).}

\item{Nsim}{Number of draws for MSL.}

\item{prime}{Prime number considered for Halton and Generalized-Halton
draws. Default = \code{2}.}

\item{burn}{Number of the first observations discarded in the case of Halton
draws. Default = \code{10}.}

\item{antithetics}{Logical. Default = \code{FALSE}. If \code{TRUE},
antithetics counterpart of the uniform draws is computed. (see section
\sQuote{Details}).}

\item{seed}{Numeric. Seed for the random draws.}

\item{itermax}{Maximum number of iterations allowed for optimization.
Default = \code{2000}.}

\item{printInfo}{Logical. Print information during optimization. Default =
\code{FALSE}.}

\item{tol}{Numeric. Convergence tolerance. Default = \code{1e-12}.}

\item{gradtol}{Numeric. Convergence tolerance for gradient. Default =
\code{1e-06}.}

\item{stepmax}{Numeric. Step max for \code{ucminf} algorithm. Default =
\code{0.1}.}

\item{qac}{Character. Quadratic Approximation Correction for \code{'bhhh'}
and \code{'nr'} algorithms. If \code{'stephalving'}, the step length is
decreased but the direction is kept. If \code{'marquardt'} (default), the
step length is decreased while also moving closer to the pure gradient
direction. See \code{\link[maxLik:maxBHHH]{maxBHHH}} and
\code{\link[maxLik:maxNR]{maxNR}}.}

\item{x}{an object of class zisfcross (returned by the function \code{\link{zisfcross}}).}

\item{...}{additional arguments of frontier are passed to zisfcross;
additional arguments of the print, bread, estfun, nobs methods are currently ignored.}
}
\value{
\code{\link{zisfcross}} returns a list of class \code{'zisfcross'}
containing the following elements:

\item{call}{The matched call.}

\item{formula}{The estimated model.}

\item{S}{The argument \code{'S'}. See the section \sQuote{Arguments}.}

\item{typeSfa}{Character string. 'Zero Inefficiency Production/Profit Frontier, e = v - u'
when \code{S = 1} and 'Zero Inefficiency Cost Frontier, e = v + u' when
\code{S = -1}.}

\item{Nobs}{Number of observations used for optimization.}

\item{nXvar}{Number of explanatory variables in the production or cost
frontier.}

\item{nmuZUvar}{Number of variables explaining heterogeneity in the
truncated mean, only if \code{udist = 'tnormal'} or \code{'lognormal'}.}

\item{logDepVar}{The argument \code{'logDepVar'}. See the section
\sQuote{Arguments}.}

\item{nuZUvar}{Number of variables explaining heteroscedasticity in the
one-sided error term.}

\item{nvZVvar}{Number of variables explaining heteroscedasticity in the
two-sided error term.}

\item{nParm}{Total number of parameters estimated.}

\item{udist}{The argument \code{'udist'}. See the section
\sQuote{Arguments}.}

\item{startVal}{Numeric vector. Starting value for M(S)L estimation.}

\item{dataTable}{A data frame (tibble format) containing information on data
used for optimization along with residuals and fitted values of the OLS and
M(S)L estimations, and the individual observation log-likelihood. When \code{weights}
is specified an additional variable is also provided in \code{dataTable}.}

\item{initHalf}{When \code{start = NULL} and \code{udist = 'hnormal'}. Initial ML estimation with half
normal distribution for the one-sided error term. Model to construct the
starting values for the ZISF estimation. Object of class
\code{'maxLik'} and \code{'maxim'} returned. For \code{udist = 'exponential'} it returns \code{initExpo},
for \code{udist = 'tnormal'} it returns \code{initTrunc},
for \code{udist = 'rayleigh'} it returns \code{initRay},
for \code{udist = 'uniform'} it returns \code{initUni},
for \code{udist = 'gamma'} it returns \code{initGamma},
for \code{udist = 'lognormal'} it returns \code{initLog},
for \code{udist = 'genexponential'} it returns \code{initGenexpo},
for \code{udist = 'tslaplace'} it returns \code{initTSL}.}

\item{isWeights}{Logical. If \code{TRUE} weighted log-likelihood is
maximized.}

\item{optType}{Optimization algorithm used.}

\item{nIter}{Number of iterations of the ML estimation.}

\item{optStatus}{Optimization algorithm termination message.}

\item{startLoglik}{Log-likelihood at the starting values.}

\item{mlLoglik}{Log-likelihood value of the M(S)L estimation.}

\item{mlParam}{Parameters obtained from M(S)L estimation.}

\item{gradient}{Each variable gradient of the M(S)L estimation.}

\item{gradL_OBS}{Matrix. Each variable individual observation gradient of
the M(S)L estimation.}

\item{gradientNorm}{Gradient norm of the M(S)L estimation.}

\item{invHessian}{Covariance matrix of the parameters obtained from the
M(S)L estimation.}

\item{hessianType}{The argument \code{'hessianType'}. See the section
\sQuote{Arguments}.}

\item{mlDate}{Date and time of the estimated model.}

\item{simDist}{The argument \code{'simDist'}, only if \code{udist =
'gamma'}, \code{'lognormal'} or , \code{'weibull'}. See the section
\sQuote{Arguments}.}

\item{Nsim}{The argument \code{'Nsim'}, only if \code{udist = 'gamma'},
\code{'lognormal'} or , \code{'weibull'}. See the section
\sQuote{Arguments}.}

\item{FiMat}{Matrix of random draws used for MSL, only if \code{udist =
'gamma'}, \code{'lognormal'} or , \code{'weibull'}.}
}
\description{
\code{\link{zisfcross}} is a symbolic formula-based function for the
estimation of stochastic frontier models in the presence of efficient and
inefficient groups of observation, in the case of cross-sectional or
pooled cross-section data, using maximum (simulated) likelihood - M(S)L.

The function accounts for heteroscedasticity in both one-sided and two-sided
error terms as in Reifschneider and Stevenson (1991), Caudill and Ford
(1993), Caudill \emph{et al.} (1995) and Hadri (1999), but also
heterogeneity in the mean of the pre-truncated distribution as in Kumbhakar
\emph{et al.} (1991), Huang and Liu (1994) and Battese and Coelli (1995).

Ten distributions are possible for the one-sided error term and nine
optimization algorithms are available.
}
\details{
Following Kumbhakar \emph{et al.} (2013) the model can be defined as:

\Sexpr[results=rd, stage=build]{
katex::math_to_rd("y_i = \\\alpha + \\\mathbf{x_i^{\\\prime}}\\\bm{\\\beta} + v_i - Su_i \\\quad \\\hbox{with probability} \\\quad p,")
}

\Sexpr[results=rd, stage=build]{
katex::math_to_rd("y_i = \\\alpha + \\\mathbf{x_i^{\\\prime}}\\\bm{\\\beta} + v_i \\\quad \\\hbox{with probability} \\\quad 1-p")
}

where \eqn{i} is the observation, \eqn{y} is the
output (cost, revenue, profit), \eqn{x} is the vector of main explanatory
variables (inputs and other control variables), \eqn{u} is the one-sided
error term with variance \eqn{\sigma_{u}^2}, and \eqn{v} is the two-sided
error term with variance \eqn{\sigma_{v}^2}.

\code{S = 1} in the case of production (profit) frontier function and
\code{S = -1} in the case of cost frontier function.

The prior probability of belonging to the inefficient class can depend on some
covariates using a logit specification:

\Sexpr[results=rd, stage=build]{
katex::math_to_rd("p_i = \\\frac{\\\exp{(\\\theta'Z_{hi})}}{1-\\\exp{(\\\theta'Z_{hi})}}")
}

with \eqn{Z_h} the covariates, \eqn{\theta} the coefficients estimated for
the covariates.

Let

\Sexpr[results=rd, stage=build]{
katex::math_to_rd("\\\epsilon_i = v_i -Su_i")
}

In the case of the truncated normal distribution, the convolution of
\eqn{u_i} and \eqn{v_i} is:

\Sexpr[results=rd, stage=build]{
katex::math_to_rd("f(\\\epsilon_i)=\\\frac{p_i}{\\\sqrt{\\\\sigma_u^2 + \\\sigma_v^2}}\\\phi\\\\left(\\\frac{S\\\epsilon_i + \\\mu}{\\\sqrt{\\\sigma_u^2 + \\\sigma_v^2}}\\\\right)\\\Phi\\\\left(\\\frac{\\\mu_{i\\\ast}}{\\\sigma_\\\ast}\\\\right)\\\Big/\\\Phi\\\\left(\\\frac{\\\mu}{\\\sigma_u}\\\\right) + \\\frac{1-p_i}{\\\sigma_v}\\\Phi\\\\left(\\\frac{S\\\epsilon}{\\\sigma_v}\\\\right)")
}

where

\Sexpr[results=rd, stage=build]{
katex::math_to_rd("\\\mu_{i*}=\\\frac{\\\mu\\\sigma_v^2 - S\\\epsilon_i\\\sigma_u^2}{\\\sigma_u^2 + \\\sigma_v^2}")
}

and

\Sexpr[results=rd, stage=build]{
katex::math_to_rd("\\\sigma_*^2 = \\\frac{\\\sigma_u^2 \\\sigma_v^2}{\\\sigma_u^2 + \\\sigma_v^2}")
}

In the case of the half normal distribution the convolution is obtained by
setting \eqn{\mu=0}.

Class assignment is based on the largest posterior probability. This
probability is obtained using Bayes' rule, as follows for the inefficient class

\Sexpr[results=rd, stage=build]{
katex::math_to_rd("p_i^\\\ast = \\\frac{p_i \\\times \\\pi(i, 1) }{f(\\\epsilon_i)}")
}

where

\Sexpr[results=rd, stage=build]{
katex::math_to_rd("\\\pi(i, 1)=\\\frac{1}{\\\sqrt{\\\\sigma_u^2 + \\\sigma_v^2}}\\\phi\\\\left(\\\frac{S\\\epsilon_i + \\\mu}{\\\sqrt{\\\sigma_u^2 + \\\sigma_v^2}}\\\\right)\\\Phi\\\\left(\\\frac{\\\mu_{i\\\ast}}{\\\sigma_\\\ast}\\\\right)\\\Big/\\\Phi\\\\left(\\\frac{\\\mu}{\\\sigma_u}\\\\right)")
}

\code{zisfcross} allows for the maximization of weighted log-likelihood.
When option \code{weights} is specified and \code{wscale = TRUE}, the weights
is scaled as

\Sexpr[results=rd, stage=build]{
katex::math_to_rd('new_{weights} = sample_{size} \\\times \\\frac{old_{weights}}{\\\sum(old_{weights})}')
}

For difficult problems, non-gradient methods (e.g. \code{nm} or \code{sann}) can be
used to warm start the optimization and zoom in the neighborhood of the
solution. Then a gradient-based methods is recommanded in the second step. In the case
of \code{sann}, we recommand to significantly increase the iteration limit
(e.g. \code{itermax = 20000}). The Conjugate Gradient (\code{cg}) can also be used
in the first stage.

A set of extractor functions for fitted model objects is available for objects of class
\code{'zisfcross'} including methods to the generic functions \code{\link[=print.zisfcross]{print}},
\code{\link[=summary.zisfcross]{summary}}, \code{\link[=coef.zisfcross]{coef}},
\code{\link[=fitted.zisfcross]{fitted}}, \code{\link[=logLik.zisfcross]{logLik}},
\code{\link[=residuals.zisfcross]{residuals}}, \code{\link[=vcov.zisfcross]{vcov}},
\code{\link[=efficiencies.zisfcross]{efficiencies}}, \code{\link[=ic.zisfcross]{ic}},
\code{\link[=marginal.zisfcross]{marginal}}, \code{\link[=skewnessTest]{skewnessTest}},
\code{\link[=estfun.zisfcross]{estfun}} and
\code{\link[=bread.zisfcross]{bread}} (from the \pkg{sandwich} package),
\code{\link[=coeftest]{coeftest}} (from the \pkg{lmtest} package).
}
\note{
For the Halton draws, the code is adapted from the \pkg{mlogit}
package.
}
\examples{

## Using data on Spanish dairy farms
# Cobb Douglas (production function) half normal distribution

cb_zisf_h <- zisfcross(formula = YIT ~ X1 + X2 + X3 + X4, udist = "hnormal", 
data = dairyspain, S = 1, method = "bfgs")

summary(cb_zisf_h)

}
\references{
Aigner, D., Lovell, C. A. K., and Schmidt, P. 1977. Formulation
and estimation of stochastic frontier production function models.
\emph{Journal of Econometrics}, \bold{6}(1), 21--37.

Battese, G. E., and Coelli, T. J. 1995. A model for technical inefficiency
effects in a stochastic frontier production function for panel data.
\emph{Empirical Economics}, \bold{20}(2), 325--332.

Caudill, S. B., and Ford, J. M. 1993. Biases in frontier estimation due to
heteroscedasticity. \emph{Economics Letters}, \bold{41}(1), 17--20.

Caudill, S. B., Ford, J. M., and Gropper, D. M. 1995. Frontier estimation
and firm-specific inefficiency measures in the presence of
heteroscedasticity. \emph{Journal of Business & Economic Statistics},
\bold{13}(1), 105--111.

Greene, W. H. 2003. Simulated likelihood estimation of the normal-Gamma
stochastic frontier function. \emph{Journal of Productivity Analysis},
\bold{19}(2-3), 179--190.

Hadri, K. 1999. Estimation of a doubly heteroscedastic stochastic frontier
cost function. \emph{Journal of Business & Economic Statistics},
\bold{17}(3), 359--363.

Hajargasht, G. 2015. Stochastic frontiers with a Rayleigh distribution.
\emph{Journal of Productivity Analysis}, \bold{44}(2), 199--208.

Huang, C. J., and Liu, J.-T. 1994. Estimation of a non-neutral stochastic
frontier production function. \emph{Journal of Productivity Analysis},
\bold{5}(2), 171--180.

Kumbhakar, S. C., Ghosh, S., and McGuckin, J. T. 1991) A generalized
production frontier approach for estimating determinants of inefficiency in
U.S. dairy farms. \emph{Journal of Business & Economic Statistics},
\bold{9}(3), 279--286.

Kumbhakar, S. C., Parmeter, C. F., and Tsionas, E. G. 2013)
A zero inefficiency stochastic frontier model.
\emph{Journal of Econometrics}, \bold{172}(1), 66--76.

Li, Q. 1996. Estimating a stochastic production frontier when the adjusted
error is symmetric. \emph{Economics Letters}, \bold{52}(3), 221--228.

Meeusen, W., and Vandenbroeck, J. 1977. Efficiency estimation from
Cobb-Douglas production functions with composed error. \emph{International
Economic Review}, \bold{18}(2), 435--445.

Migon, H. S., and Medici, E. V. 2001. Bayesian hierarchical models for
stochastic production frontier. Lacea, Montevideo, Uruguay.

Nguyen, N. B. 2010. Estimation of technical efficiency in stochastic
frontier analysis. PhD dissertation, Bowling Green State University, August.

Papadopoulos, A. 2021. Stochastic frontier models using the generalized
exponential distribution. \emph{Journal of Productivity Analysis},
\bold{55}:15--29.

Reifschneider, D., and Stevenson, R. 1991. Systematic departures from the
frontier: A framework for the analysis of firm inefficiency.
\emph{International Economic Review}, \bold{32}(3), 715--723.

Stevenson, R. E. 1980. Likelihood Functions for Generalized Stochastic
Frontier Estimation. \emph{Journal of Econometrics}, \bold{13}(1), 57--66.

Tsionas, E. G. 2007. Efficiency measurement with the Weibull stochastic
frontier. \emph{Oxford Bulletin of Economics and Statistics}, \bold{69}(5),
693--706.

Wang, K., and Ye, X. 2020. Development of alternative stochastic frontier
models for estimating time-space prism vertices. \emph{Transportation}.

Wang, J. 2012. A normal truncated skewed-Laplace model in stochastic
frontier analysis. Master thesis, Western Kentucky University, May.
}
\seealso{
\code{\link[=print.zisfcross]{print}} for printing \code{zisfcross} object.

\code{\link[=summary.zisfcross]{summary}} for creating and printing
summary results.

\code{\link[=coef.zisfcross]{coef}} for extracting coefficients of the
estimation.

\code{\link[=efficiencies.zisfcross]{efficiencies}} for computing
(in-)efficiency estimates.

\code{\link[=fitted.zisfcross]{fitted}} for extracting the fitted frontier
values.

\code{\link[=ic.zisfcross]{ic}} for extracting information criteria.

\code{\link[=logLik.zisfcross]{logLik}} for extracting log-likelihood
value(s) of the estimation.

\code{\link[=marginal.zisfcross]{marginal}} for computing marginal effects of
inefficiency drivers.

\code{\link[=residuals.zisfcross]{residuals}} for extracting residuals of the
estimation.

\code{\link[=skewnessTest]{skewnessTest}} for conducting residuals
skewness test.

\code{\link[=vcov.zisfcross]{vcov}} for computing the variance-covariance
matrix of the coefficients.

\code{\link[=bread.zisfcross]{bread}} for bread for sandwich estimator.

\code{\link[=estfun.zisfcross]{estfun}} for gradient extraction for each
observation.

\code{\link{skewnessTest}} for implementing skewness test.
}
\keyword{cross-section}
\keyword{likelihood}
\keyword{models}
\keyword{optimize}
