% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sfametacross.R
\name{sfametacross}
\alias{sfametacross}
\alias{bread.sfametacross}
\alias{estfun.sfametacross}
\alias{print.sfametacross}
\title{Metafrontier estimation using cross-sectional or pooled data}
\usage{
sfametacross(
  formula,
  muhet,
  uhet,
  vhet,
  ghet,
  logDepVar = TRUE,
  data,
  subset,
  weights,
  wscale = TRUE,
  S = 1L,
  modelType = "hhl14",
  udist = "hnormal",
  start = NULL,
  randStart = FALSE,
  method = "bfgs",
  hessianType = 1,
  metaSim = 5000,
  simType = "halton",
  Nsim = 300,
  prime = 2L,
  burn = 10,
  antithetics = FALSE,
  seed = 12345,
  itermax = 2000L,
  printInfo = FALSE,
  tol = 1e-12,
  gradtol = 1e-06,
  stepmax = 0.1,
  qac = "marquardt"
)

\method{print}{sfametacross}(x, ...)

bread.sfametacross(x, ...)

estfun.sfametacross(x, ...)
}
\arguments{
\item{formula}{A symbolic description of the model to be estimated based on
the generic function \code{formula} (see section \sQuote{Details}).}

\item{muhet}{A one-part formula to consider heterogeneity in the mean of the
pre-truncated distribution (see section \sQuote{Details}).}

\item{uhet}{A one-part formula to consider heteroscedasticity in the
one-sided error variance (see section \sQuote{Details}).}

\item{vhet}{A one-part formula to consider heteroscedasticity in the
two-sided error variance (see section \sQuote{Details}).}

\item{ghet}{A one-part formula specifying the group variable for the
metafrontier estimation}

\item{logDepVar}{Logical. Informs whether the dependent variable is logged
(\code{TRUE}) or not (\code{FALSE}). Default = \code{TRUE}.}

\item{data}{The data frame containing the data.}

\item{subset}{An optional vector specifying a subset of observations to be
used in the optimization process.}

\item{weights}{An optional vector of weights to be used for weighted
log-likelihood. Should be \code{NULL} or numeric vector with positive values.
When \code{NULL}, a numeric vector of 1 is used.}

\item{wscale}{Logical. When \code{weights} is not \code{NULL}, a scaling
transformation is used such that the \code{weights} sum to the sample
size. Default \code{TRUE}. When \code{FALSE} no scaling is used.}

\item{S}{If \code{S = 1} (default), a production (profit) frontier is
estimated: \eqn{\epsilon_i = v_i-u_i}. If \code{S = -1}, a cost frontier is
estimated: \eqn{\epsilon_i = v_i+u_i}.}

\item{modelType}{Metafrontier models that can be estimated. Five models are
allowed. \code{'hhl14'} estimates the stochastic metafrontier following
Huang et al. (2014) - Default. \code{'bpo04a'} and \code{'bpo04b'} estimate
the deterministic metafrontier following Battese et al. (2004), and using
linear and quadratic programming, respectively. \code{'aos17a'} and
\code{'aos17b'} estimate the stochastic metafrontier based on
Amsler et al. (2017) using simulation. \code{'aos17a'} computes the meta-
distance assuming the unconditional inefficiency term, while \code{'aos17b'}
assumes that the inefficiency term is conditional on the overall error
term. \code{'aos17a'} and \code{'aos17b'} assumes that the two-sided error
terms \eqn{v_1, v_2, \cdots, v_G}  are mutually independent for the \eqn{G}
groups. Models \code{'aos17c'} and \code{'aos17d'} reproduces \code{'aos17a'}
and \code{'aos17b'}, respectively by assuming an equiproportionnate
correlation. The user is prompted to provide a value for the correlation when
any of these two models is chosen.}

\item{udist}{Character string. Default = \code{'hnormal'}. Distribution
specification for the one-sided error term. 10 different distributions are
available: \itemize{ \item \code{'hnormal'}, for the half normal
distribution (Aigner \emph{et al.} 1977, Meeusen and Vandenbroeck 1977)
\item \code{'exponential'}, for the exponential distribution \item
\code{'tnormal'} for the truncated normal distribution (Stevenson 1980)
\item \code{'rayleigh'}, for the Rayleigh distribution (Hajargasht 2015)
\item \code{'uniform'}, for the uniform distribution (Li 1996, Nguyen 2010)
\item \code{'gamma'}, for the Gamma distribution (Greene 2003) \item
\code{'lognormal'}, for the log normal distribution (Migon and Medici 2001,
Wang and Ye 2020) \item \code{'weibull'}, for the Weibull distribution
(Tsionas 2007) \item \code{'genexponential'}, for the generalized
exponential distribution (Papadopoulos 2020) \item \code{'tslaplace'}, for
the truncated skewed Laplace distribution (Wang 2012). } For
\code{'modelType'} = 'aos17b', only \code{'udist'} = 'hnormal' is available.}

\item{start}{Numeric vector. Optional starting values for the maximum
likelihood (ML) estimation.}

\item{randStart}{Logical. Define if random starting values should be used for
M(S)L estimation. New starting values are obtained as old ones + draws from
normal distribution with std. deviation of 0.01. \code{'seed'} is not
considered here, then each run will provide different starting values
(unless a seed is set by the user before the run).}

\item{method}{Optimization algorithm used for the estimation.  Default =
\code{'bfgs'}. 11 algorithms are available: \itemize{ \item \code{'bfgs'},
for Broyden-Fletcher-Goldfarb-Shanno (see
\code{\link[maxLik:maxBFGS]{maxBFGS}}) \item \code{'bhhh'}, for
Berndt-Hall-Hall-Hausman (see \code{\link[maxLik:maxBHHH]{maxBHHH}}) \item
\code{'nr'}, for Newton-Raphson (see \code{\link[maxLik:maxNR]{maxNR}})
\item \code{'nm'}, for Nelder-Mead (see \code{\link[maxLik:maxNM]{maxNM}})
\item \code{'cg'}, for Conjugate Gradient (see
\code{\link[maxLik:maxCG]{maxCG}}) \item \code{'sann'}, for Simulated
Annealing (see \code{\link[maxLik:maxSANN]{maxSANN}}) \item \code{'ucminf'},
for a quasi-Newton type optimization with BFGS updating of the inverse
Hessian and soft line search with a trust region type monitoring of
the input to the line search algorithm (see
\code{\link[ucminf:ucminf]{ucminf}})
\item \code{'mla'}, for general-purpose optimization based on
Marquardt-Levenberg algorithm (see \code{\link[marqLevAlg:mla]{mla}})
\item \code{'sr1'}, for Symmetric Rank 1 (see
\code{\link[trustOptim:trust.optim]{trust.optim}}) \item \code{'sparse'},
for trust regions and sparse Hessian (see
\code{\link[trustOptim:trust.optim]{trust.optim}}) \item
\code{'nlminb'}, for optimization using PORT routines (see
\code{\link[stats:nlminb]{nlminb}})}}

\item{hessianType}{Integer. If \code{1} (Default), analytic Hessian is
returned for all the distributions. If \code{2},
bhhh Hessian is estimated (\eqn{g'g}).}

\item{metaSim}{Integer. Number of simulations conducted for the estimation of
the stochastic metafrontier in the case of models \code{'aos17a'} and
\code{'aos17b'}. For models \code{'bpo04a'} and \code{'bpo04b'},
\code{'metaSim'} is used for the simulation of the parameters standard
errors. Default 5000.}

\item{simType}{Character string. If \code{simType = 'halton'} (Default),
Halton draws are used for maximum simulated likelihood (MSL). If
\code{simType = 'ghalton'}, Generalized-Halton  draws are used for MSL. If
\code{simType = 'sobol'} or \code{simType = 'rsobol'}, Sobol draws or
randomized Sobol draws are used for MSL, respectively. If
\code{simType = 'richtmyer'}, or \code{simType = 'rrichtmyer'},
Richtmyer sequence or randomized Richtmyer sequence is used for MSL
estimation, respectively. If \code{simType = 'mlhs'}, modified latin
hypercube sampling is performed. If \code{simType = 'uniform'}, uniform draws
are used for MSL. (see section \sQuote{Details}).}

\item{Nsim}{Number of draws for MSL. Default 100.}

\item{prime}{Prime number considered for quasi-random sequences. The first
10,000 primes are available. Default = \code{2}.}

\item{burn}{Number of the first observations discarded in the case of Halton,
Richtmyer, and Sobol draws. For the randomized versions, the burn is not
considered. Default = \code{10}.}

\item{antithetics}{Logical. Default = \code{FALSE}. If \code{TRUE},
antithetics counterpart of the uniform draws is computed. (see section
\sQuote{Details}).}

\item{seed}{Numeric. Seed for the random draws.}

\item{itermax}{Maximum number of iterations allowed for optimization.
Default = \code{2000}.}

\item{printInfo}{Logical. Print information during optimization. Default =
\code{FALSE}.}

\item{tol}{Numeric. Convergence tolerance. Default = \code{1e-12}.}

\item{gradtol}{Numeric. Convergence tolerance for gradient. Default =
\code{1e-06}.}

\item{stepmax}{Numeric. Step max for \code{ucminf} algorithm. Default =
\code{0.1}.}

\item{qac}{Character. Quadratic Approximation Correction for \code{'bhhh'}
and \code{'nr'} algorithms. If \code{'stephalving'}, the step length is
decreased but the direction is kept. If \code{'marquardt'} (default), the
step length is decreased while also moving closer to the pure gradient
direction. See \code{\link[maxLik:maxBHHH]{maxBHHH}} and
\code{\link[maxLik:maxNR]{maxNR}}.}

\item{x}{an object of class sfametacross (returned by the function
\code{\link{sfametacross}}).}

\item{...}{additional arguments of frontier are passed to sfametacross;
additional arguments of the print, bread, and estfun methods are currently
ignored.}
}
\value{
\code{\link{sfametacross}} returns a list of class
\code{'sfametacross'} containing the following elements:

\item{call}{The matched call.}

\item{formula}{A multi-part formula of the estimated model.}

\item{S}{The argument \code{'S'}. See the section \sQuote{Arguments}.}

\item{typeSfa}{Character string. 'Stochastic Production/Profit Frontier, e =
v - u' when \code{S = 1} and 'Stochastic Cost Frontier, e = v + u' when
\code{S = -1}.}

\item{Nobs}{Vector containing the number of observations for each group, in
addition to the metafrontier estimation.}

\item{Ngroup}{Number of groups for the metafrontier.}

\item{name_meta_var}{Character sting indicating the name of variable
containing the groups of observations.}

\item{nXvar}{Number of explanatory variables in the production or cost
frontier.}

\item{nmuZUvar}{Number of variables explaining heterogeneity in the
truncated mean, only if \code{udist = 'tnormal'} or \code{'lognormal'}.}

\item{Yvarm}{Numeric vector of group predicted frontiers for estimating
metafrontiers.}

\item{logDepVar}{The argument \code{'logDepVar'}. See the section
\sQuote{Arguments}.}

\item{nuZUvar}{Number of variables explaining heteroscedasticity in the
one-sided error term.}

\item{nvZVvar}{Number of variables explaining heteroscedasticity in the
two-sided error term.}

\item{nParm}{Total number of parameters estimated.}

\item{udist}{The argument \code{'udist'}. See the section
\sQuote{Arguments}.}

\item{startVal}{Numeric matrix containing the starting values used for the
estimation of the group frontiers and also the metafrontier in the case
\code{'modelType'} = 'hll14'.}

\item{modelType}{Character string indicating the type of metafrontier that
is estimated. See the section
\sQuote{Arguments}.}

\item{olsParam}{List of numeric vectors. OLS estimates for group frontiers,
and metafrontier in the case \code{'modelType'} = 'hll14'.}

\item{olsStder}{List of numeric vectors. Standard errors of OLS estimates
for group frontiers, and metafrontier in the case
\code{'modelType'} = 'hll14'.}

\item{olsSigmasq}{Numeric. Estimated variance of OLS random error for group
frontiers, and metafrontier in the case \code{'modelType'} = 'hll14'.}

\item{olsLoglik}{List. Log-likelihood value of OLS estimation for group
frontiers, and metafrontier in the case \code{'modelType'} = 'hll14'.}

\item{olsSkew}{List. Skewness of the residuals of the OLS estimation.}

\item{olsM3Okay}{List of character string. Indicate whether the residuals of
the OLS estimation have the expected skewness for group frontiers,
and metafrontier in the case \code{'modelType'} = 'hll14'.}

\item{CoelliM3Test}{List. Coelli's test for OLS residuals skewness for group
frontiers, and metafrontier in the case \code{'modelType'} = 'hll14'.
(See Coelli, 1995).}

\item{AgostinoTest}{List. D'Agostino's test for OLS residuals skewness for
group frontiers, and metafrontier in the case \code{'modelType'} = 'hll14'.
(See D'Agostino and Pearson, 1973).}

\item{isWeights}{Logical. If \code{TRUE} weighted log-likelihood is
maximized.}

\item{optType}{Optimization algorithm(s) used for group frontiers and
metafrontier.}

\item{nIter}{Integer vector. Number of iterations of the ML estimation.}

\item{optStatus}{String vector. Optimization algorithm termination message.}

\item{startLoglik}{Numeric vector. Log-likelihood at the starting values.}

\item{mlLoglik}{Numeric vector. Log-likelihood value of the M(S)L
estimation.}

\item{mlParam}{Numeric Matrix. Parameters obtained from M(S)L estimation, and
LP or QP estimation.}

\item{dataTable}{List of data frames. Each data frame contains information
on data used for optimization (group frontiers and metafrontiers) along with
residuals and fitted values of the OLS and M(S)L estimations, and the
individual observation log-likelihood (whenever likelihood is used).
When \code{weights} is specified an additional variable is also provided in
\code{dataTable}.}

\item{gradient}{Numeric matrix. Each variable gradient of the M(S)L
estimation.}

\item{gradL_OBS}{List of numeric matrices. Each variable individual
observation gradient of the M(S)L estimation.}

\item{gradientNorm}{Numeric vector. Gradient norm of the M(S)L estimation.}

\item{invHessian}{List of numeric matrices. Covariance matrix of the
parameters obtained from the M(S)L estimation.}

\item{conditionNums}{List of numeric matrices. Condition number adding
columns one by one for the different groups and in the case
\code{'modelType'} = 'hhl14', for the metafrontier.}

\item{hessianType}{The argument \code{'hessianType'}. See the section
\sQuote{Arguments}.}

\item{metaSim}{Number of simulations used in the case \code{'modelType'} =
'bpo04a', 'bpo04b', 'aos17a', or 'aos17b'.}

\item{lpSimRes}{Matrix of parameters obtained from the LP run in the
case \code{'modelType'} = 'bpo04a'. Used to obtain standard errors of
parameters.}

\item{qpSimRes}{Matrix of parameters obtained from the QP run in the
case \code{'modelType'} = 'bpo04b'. Used to obtain standard errors of
parameters.}

\item{MdMat}{Matrix of metafrontier distance as described in
Amsler et al. (2017).}

\item{Mud}{Numeric vector for the unconditional inefficiency when
\code{'modelType'} = 'aos17a'.}

\item{groupFrontierMat}{Matrix of simulated group frontiers in the case
\code{'modelType'} = 'aos17a', or 'aos17b'.}

\item{metaFrontierMat}{Matrix of simulated metafrontier in the case
\code{'modelType'} = 'aos17a', or 'aos17b'.}

\item{mlDate}{Date and time of the estimated models.}

\item{simDist}{The argument \code{'simDist'}, only if \code{udist =
'gamma'}, \code{'lognormal'} or , \code{'weibull'}. See the section
\sQuote{Arguments}.}

\item{Nsim}{The argument \code{'Nsim'}, only if \code{udist = 'gamma'},
\code{'lognormal'} or , \code{'weibull'}. See the section
\sQuote{Arguments}.}

\item{FiMat}{List of matrices of random draws used for MSL, only if
\code{udist = 'gamma'}, \code{'lognormal'} or , \code{'weibull'}.}
}
\description{
\code{\link{sfametacross}} is a symbolic formula-based function for the
estimation of stochastic and deterministic metafrontiers models in the case
of cross-sectional or pooled cross-sectional data, using maximum (simulated)
likelihood - M(S)L, linear or quadratic programming, or simulation depending
on the case.

The function accounts for heteroscedasticity in both one-sided and two-sided
error terms as in Reifschneider and Stevenson (1991), Caudill and Ford
(1993), Caudill \emph{et al.} (1995) and Hadri (1999), but also
heterogeneity in the mean of the pre-truncated distribution as in Kumbhakar
\emph{et al.} (1991), Huang and Liu (1994) and Battese and Coelli (1995).

Depending on the model, ten distributions are possible for the one-sided
error term and eleven optimization algorithms are available.
}
\details{
The stochastic frontier model for the cross-sectional data is defined for
unit \eqn{i} belonging to group \eqn{d_i} as

\deqn{y_{i} = \mathbf{x}'_i\bm{\beta}_{d_i} + v_{i,{d_i}} - Su_{i,{d_i}}}

where \eqn{S=1} in the case of a production function, and \eqn{S=-1} in the
case of a cost function. Even though, we only observe \eqn{g = d_i}, the
concept of the metafrontier is based on assessing by how much unit \eqn{i}
could have produced if it had used the technology of a different group.
Conceptually, we have

\deqn{y_{ig} = \mathbf{x}'_i\bm{\beta}_g + v_{ig} - Su_{ig} \;\; \text{with} 
\;\; g= 1, \cdots, G}

The first step is the estimation of each group frontier. The second step,
which is the metafrontier estimation varies depending on the methodology.

Battese et al. (2004) suggested a deterministic way for estimating the
metafrontier. The metafrontier is defined as

\deqn{y_i^* =\mathbf{x}'_i\bm{\beta}^*}

such that

\deqn{\mathbf{x}'_i\bm{\beta}^* \geq \mathbf{x}'_i\bm{\beta}_g}

The parameters \eqn{\bm{\beta}^*} can be obtained by solving either a linear
program:

\deqn{\begin{matrix} 
\min L \equiv \sum_{i = 1} \left(\mathbf{x}'_i\bm{\beta}^* - 
\mathbf{x}'_i\bm{\beta}_g\right) \\[1em]
\text{s.t.} \; \mathbf{x}'_i\bm{\beta}^* \geq \mathbf{x}'_i\bm{\beta}_g
 \end{matrix}}

or a quadratic program:

\deqn{\begin{matrix} 
\min L \equiv \sum_{i = 1} \left(\mathbf{x}'_i\bm{\beta}^* - 
\mathbf{x}'_i\bm{\beta}_g\right)^2 \\[1em]
\text{s.t.} \; \mathbf{x}'_i\bm{\beta}^* \geq \mathbf{x}'_i\bm{\beta}_g
 \end{matrix}}

The thechnology gap ratio is obtained as (assuming that \eqn{y_i} is
expressed in logarithm)

\deqn{TGR_i = \frac{\exp{\left(\mathbf{x}'_i\bm{\beta}_g\right)}}{
\exp{\left(\mathbf{x}'_i\bm{\beta}^*\right)}}}

Huang et al. (2014) suggested a stochastic version of the metafrontier. Let's
assume that \eqn{\ln f_i^g=\mathbf{x}'_i\bm{\beta}_g} and
\eqn{\ln f_i^M = \mathbf{x}'_i\bm{\beta}^*}. Huang et al. (2014) assumed the
following relation

\deqn{\ln f_i^g = \ln f_i^M - u_{i,M}}

where \eqn{\exp{\left(u_{i,M}\right)}} is the TGR.

Since \eqn{\ln f_i^g} is not observed, Huang et al. (2014) suggested the
following estimation

\deqn{\ln \hat{f}_i^g = \ln f_i^M - u_{i,M} + v_{i,M}}

where \eqn{\ln \hat{f}_i^g} is the predicted frontier obtained from the
individual group frontier.

The new quasi maximum likelihood estimator requires a correction of the
standard error in order to account for heteroscedasticity. The robust
sandwich-form of the variance-covariance matrix estimator can be used to
correct for the standard errors.

A new stochastic metafrontier has also been suggested in
Amsler et al. (2017). Based on the previous developments, The stochastic
frontiers corresponding to each group are defined as

\deqn{f_{ig} = \mathbf{x}'_i\bm{\beta}_g + v_{ig} \;\; \text{with} 
\;\; g= 1, \cdots, G}

Amsler et al. (2017) defined the stochastic metafrontier in the case of a
production function as

\deqn{f_i = \max\left[f_{i1}, \cdots, f_{iG}\right]}

The following decomposition can then be obtained

\deqn{\left(f_i - y_i\right)=\left(f_{i,d_i} - y_i\right) + 
\left(f_i - f_{i,d_i}\right)}

This equation is also equivalent to

\deqn{U_i=U_{i, d_i} + M_{i, d_i}}

where \eqn{U_{i, d_i}} is the one-sided technical inefficiency for unit
\eqn{i} in the stochastic frontier model for group \eqn{d_i}, and
\eqn{M_{i, d_i}}, which is the metafrontier distance, can be evaluated
based on different assumptions in relation to the total error term
(\eqn{\epsilon = v-u}).

For simplicity, let's write

\deqn{U=U_{d} + M_{d}}

and assume that \eqn{U}, \eqn{U_d}, and \eqn{M_d} can be evaluated
unconditionnally to \eqn{\epsilon}.

Therefore, in terms of expected values, we have

\deqn{\mu = \mu_d + \tau_d}

In the case \eqn{u_d} follows a half normal distribution, we have

\deqn{\mu_d = E\left[U_d\right] = \sqrt{\frac{2}{\pi}}\sigma_{u,d}}

On the other hand \eqn{\tau_d = E\left[M_d\right]}. As underlined by
Amsler et al. 2017, treating the frontiers as stochastic given
\eqn{\mathbf{x}} yields

\deqn{f_s \sim \left[\mathbf{x}'\bm{\beta} + \mathcal{N}
\left(0, \sigma_{v,s}^2\right)\right]}

or equivalently

\deqn{f_s \sim \mathcal{N}\left(\mathbf{x}'\bm{\beta}, 
\sigma_{v,s}^2\right)}

Then \eqn{f = \max\left(f_1, \cdots, f_S\right)} is the maximum of a set of
normal distributions. The expectation of a set of \eqn{P} normal random
variables is not known. Therefore Amsler et al. 2017 suggested the use of
simulation.

For replication \eqn{r (r = 1, \cdots, R)}, take draws
\eqn{f_1^{(r)}, \cdots, f_S^{(r)}} from the normal distributions of
\eqn{f_1, \cdots, f_S}, and calculate the metafrontier
\eqn{f^{(r)} = \max(f_1^{(r)}, \cdots, f_S^{(r)})}. Then
\eqn{M_d^{(r)} = f^{(r)}-f_d^{(r)}}. Finally

\deqn{\tau_d = \frac{1}{R}\sum_{r = 1}^{R}M_d^{(r)}}

Conditioning now on \eqn{\epsilon}, we have
\eqn{\mu_d^*=E\left[U|\epsilon\right]}, which can be obtained following
Jondrow et al. (1982). On the other hand, for
\eqn{\tau_d^*=E\left[M_d|\epsilon\right]}, we need to derive the distribution
of \eqn{v|\epsilon}.

In the case of the half normal distribution, we have

\deqn{f(v|\epsilon)=\frac{1}{\sigma^*\Phi\left(-a^*\right)\sqrt{2\pi}}
\exp\left\{-\frac{1}{2}\left[\frac{v-\mu}{\sigma_*}\right]^2\right\}}

where \eqn{-\frac{\epsilon - \mu}{\sigma^*}=-a^*} and
\eqn{\mu = \frac{\sigma_v^2}{\sigma_u^2 + \sigma_v^2}\epsilon}

The previous pdf is equivalent to a normal distribution
\eqn{\mathcal{N}\left(\mu, \sigma_*^2\right)} truncated on the left at
\eqn{\epsilon}.

As previously, the evaluation of \eqn{\tau_d^*} requires simulation. It  is
worth noting that for state \eqn{d}, conditioning on \eqn{\epsilon} matters,
while for other states \eqn{s\neq d}, conditioning on \eqn{\epsilon} does not
matter. Therefore, for each replication \eqn{r}, and for \eqn{s\neq d},
draw \eqn{f_s^{(r)}} as explained in the previous subsection. However, for
group \eqn{d}, draw \eqn{f_d^{(r)}} equal to
\eqn{\mathbf{x}'\bm{\beta}} plus a draw from the distribution of
\eqn{v|\epsilon}.

Both the approaches suggested by Amsler et al. (2017) can be extended to
assuming that the \eqn{v_{is}} are not independent.
}
\examples{
\dontrun{
# Replication of the results in Owusu and Bravo-Ureta (2022)
## download data

data <- read.csv('https://tandf.figshare.com/ndownloader/files/32434483/filename.csv')

formula <- gnut ~ land + labor + seed + agrochem + usehirlab + imprseed + 
earlypln + latepln + soil3 + extens + socnet + farmtyp3 + farmtyp2 + dist1 + 
dist2
  
## Run stochastic metafrontier following Huang et al. (2014)

metaHHL14 <- sfametacross(formula = formula, ghet = ~ male, data = data, 
modelType = 'hhl14')

summary(metaHHL14)

### Type '3' to obtain the summary for the metafrontier

## Run stochastic metafrontiers following Amsler et al. (2017)
### possibility to setup a progress bar for the simulation
handlers(global = TRUE)
handlers('progress')

metaAOS17B <- sfametacross(formula = formula, ghet = ~ male, data = data, 
modelType = 'aos17b', metaSim = 5000)

summary(metaAOS17B)
 
}
}
\references{
Aigner, D., Lovell, C. A. K., and Schmidt, P. 1977. Formulation
and estimation of stochastic frontier production function models.
\emph{Journal of Econometrics}, \bold{6}(1), 21--37.

Amsler, C., O'Donnell, C. J., Schmidt, P., 2017. Stochastic metafrontiers,
\emph{Econometric Reviews}, \bold{36}, 1007-1020.

Battese, G. E., and Coelli, T. J. 1995. A model for technical inefficiency
effects in a stochastic frontier production function for panel data.
\emph{Empirical Economics}, \bold{20}(2), 325--332.

Battese, G. E., Rao, D. S. P., O'Donnell, C. J., 2004. A metafrontier
production function for estimation of technical efficiencies and technology
gaps for firms operating under different technologies,
\emph{Journal of Productivity Analysis}, \bold{21}, 91-103.

Caudill, S. B., and Ford, J. M. 1993. Biases in frontier estimation due to
heteroscedasticity. \emph{Economics Letters}, \bold{41}(1), 17--20.

Caudill, S. B., Ford, J. M., and Gropper, D. M. 1995. Frontier estimation
and firm-specific inefficiency measures in the presence of
heteroscedasticity. \emph{Journal of Business & Economic Statistics},
\bold{13}(1), 105--111.

Coelli, T. 1995. Estimators and hypothesis tests for a stochastic frontier
function - a Monte-Carlo analysis. \emph{Journal of Productivity Analysis},
\bold{6}:247--268.

D'Agostino, R., and E.S. Pearson. 1973. Tests for departure from normality.
Empirical results for the distributions of \eqn{b_2} and \eqn{\sqrt{b_1}}.
\emph{Biometrika}, \bold{60}:613--622.

Greene, W. H. 2003. Simulated likelihood estimation of the normal-Gamma
stochastic frontier function. \emph{Journal of Productivity Analysis},
\bold{19}(2-3), 179--190.

Hadri, K. 1999. Estimation of a doubly heteroscedastic stochastic frontier
cost function. \emph{Journal of Business & Economic Statistics},
\bold{17}(3), 359--363.

Hajargasht, G. 2015. Stochastic frontiers with a Rayleigh distribution.
\emph{Journal of Productivity Analysis}, \bold{44}(2), 199--208.

Huang, C. J., and Liu, J.-T. 1994. Estimation of a non-neutral stochastic
frontier production function. \emph{Journal of Productivity Analysis},
\bold{5}(2), 171--180.

Huang, C. J., Huang, T. H., Liu, N. H., 2014. A new approach to estimating
the metafrontier production function based on a stochastic frontier
framework, \emph{Journal of Productivity Analysis}, \bold{42}, 241-254.

Jondrow, J., C.A.K. Lovell, I.S. Materov, and P. Schmidt. 1982. On the
estimation of technical inefficiency in the stochastic frontier production
function model. \emph{Journal of Econometrics}, \bold{19}:233--238.

Kumbhakar, S. C., Ghosh, S., and McGuckin, J. T. 1991) A generalized
production frontier approach for estimating determinants of inefficiency in
U.S. dairy farms. \emph{Journal of Business & Economic Statistics},
\bold{9}(3), 279--286.

Li, Q. 1996. Estimating a stochastic production frontier when the adjusted
error is symmetric. \emph{Economics Letters}, \bold{52}(3), 221--228.

Meeusen, W., and Vandenbroeck, J. 1977. Efficiency estimation from
Cobb-Douglas production functions with composed error. \emph{International
Economic Review}, \bold{18}(2), 435--445.

Migon, H. S., and Medici, E. V. 2001. Bayesian hierarchical models for
stochastic production frontier. Lacea, Montevideo, Uruguay.

Nguyen, N. B. 2010. Estimation of technical efficiency in stochastic
frontier analysis. PhD dissertation, Bowling Green State University, August.

Owusu, E. S., Bravo-Ureta, B. E., 2022. Gender and Productivity Differentials
in Smallholder Groundnut Farming in Malawi: Accounting for Technology
Differences, \emph{The Journal of Development Studies} \bold{58}, 989-1013.

Papadopoulos, A. 2021. Stochastic frontier models using the generalized
exponential distribution. \emph{Journal of Productivity Analysis},
\bold{55}:15--29.

Reifschneider, D., and Stevenson, R. 1991. Systematic departures from the
frontier: A framework for the analysis of firm inefficiency.
\emph{International Economic Review}, \bold{32}(3), 715--723.

Stevenson, R. E. 1980. Likelihood Functions for Generalized Stochastic
Frontier Estimation. \emph{Journal of Econometrics}, \bold{13}(1), 57--66.

Tsionas, E. G. 2007. Efficiency measurement with the Weibull stochastic
frontier. \emph{Oxford Bulletin of Economics and Statistics}, \bold{69}(5),
693--706.

Wang, K., and Ye, X. 2020. Development of alternative stochastic frontier
models for estimating time-space prism vertices. \emph{Transportation}.

Wang, H.J., and Schmidt, P. 2002. One-step and two-step estimation of the
effects of exogenous variables on technical efficiency levels. \emph{Journal
of Productivity Analysis}, \bold{18}:129--144.

Wang, J. 2012. A normal truncated skewed-Laplace model in stochastic
frontier analysis. Master thesis, Western Kentucky University, May.
}
\keyword{cross-section}
\keyword{likelihood}
\keyword{models}
\keyword{optimize}
